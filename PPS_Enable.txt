查看gpio引脚、是否使能pps的GPIO引脚
sudo cat /sys/kernel/debug/gpio
每当GPS的PPS过来后，会在对应的GPIO下降沿时会产生一个中断信号，此时也会产生一个timestamp时间戳，通过如下命令查看：
$cat /sys/class/pps/pps0/assert
1603875932.000014717#2869

安装cutecom 查看串口输入
sudo apt update
sudo apt install cutecom
添加串口可读权限\查看GPS信号是否正常
sudo chmod 666 /dev/ttyUSB0

将下述etc/systemd/system/pps_ldisc.service 放到/etc/systemd/system下
[Unit]
Description=Modprobe pps_ldisc
After=setserial.service
 
[Service]
Type=oneshot
ExecStart=/sbin/modprobe pps_core
ExecStart=/sbin/modprobe pps_ldisc
 
[Install]
WantedBy=gpsd.service

systemctl enable pps_ldisc.service  
systemctl start pps_ldisc.service
 
#第一行使得开机能自启，第二行启动这个service

（非必要）安装Setserial ，此举是为了低延迟和提升准确率
apt-get install setserial

安装后，在var/lib/setserial/autoserial.conf 中修改：
#
###AUTOSAVE-ONCE###
###AUTOSAVE-ONCE###
###AUTOSAVE###
#
# If you want to configure this file by hand, use 
# dpkg-reconfigure setserial
# and change the configuration mode of the file to MANUAL. If you do not do this, this file may be overwritten automatically the next time you upgrade the
# package.
#
 
# dpkg-reconfigure setserial   ...  set configuration mode to MANUAL
# Added next line for ttyS1 for Garmin 18 LVC GPS
# From: http://www.rjsystems.nl/en/2100-ntpd-garmin-gps-18-lvc-gpsd.php
# Only needed to add 'low_latency' to default port configuration
# Print out current port configuration:
#   setserial -G /dev/ttyS1
/dev/ttyS1 uart 16550A port 0x02f8 irq 3 baud_base 115200 spd_normal skip_test low_latency
 
#该文件仅需修改上面的端口映射ttyS1代表COM2口，此地需要根据你真实接入的串口修改， 
#UART越大，内部buffer就越大（16550A有16位的buffer），但是对于本任务来说，不用UART更好，
#因为缓冲区会增加延迟从而降低精度；为了最大限度地降低 CPU 利用率，默认情况下，
串口流量通常会延迟 5 到 10 毫秒。但是，在这种情况下，使用了 low_latency 设置，
#设置高一点的CPU负载是值得的。
#115200是波特率，可以尝试改为9600，如果改动后找不到数据了，就改回来

dpkg-reconfigure setserial    点击OK，选择为MANUAL；（可能会有错误提示）
重启该service： for op in stop start; do systemctl $op setserial.service; done

gpsd是一款常用的读取GPS信息的软件，其中有大家熟知的gpsmon等界面。作用是解析NMEA数据及PPS，从而获取当前GNSS的时间。
sudo apt-get install -y gpsd gpsd-clients python-gps pps-tools

安装后，修改/etc/default/gpsd
# Default settings for gpsd.
# Please do not edit this file directly - use `dpkg-reconfigure gpsd' to
# change the options.
START_DAEMON="true"
GPSD_OPTIONS="-b -n -D1"
DEVICES="/dev/ttyS1 /dev/pps0"
USBAUTO="false"
GPSD_SOCKET="/var/run/gpsd.sock"
 
#注意DEVICE的一行需要根据实际情况填写，上面为COM2口，默认是pps0
#推荐事先验证并查找对应的端口和pps
#使用 ppsfind --help
#输出示例：pps0: name=serial1 path=/dev/ttyS1   也就代表着我们现在用的是ttyS1以及pps0

gpsd 运行服务： (开机自启动）
sudo systemctl daemon-reload
sudo systemctl enable gpsd
sudo systemctl restart gpsd

nvidia@Xavier:~$ sudo ppstest /dev/pps*
trying PPS source "/dev/pps0"
found PPS source "/dev/pps0"
ok, found 1 source(s), now start fetching data...
time_pps_fetch() error -1 (Connection timed out)
time_pps_fetch() error -1 (Connection timed out)
前提是GPS 必须有信号，且获取到经纬度和时间信息后，PPS才有输出，以上说明GPS信号有问题，调整天线或排查模块是否有异常

 // 安装NTP
 sudo apt-get install -y ntp
 // 配置ntp.conf
 # Drift file to remember clock rate across restarts
driftfile /var/lib/ntp/ntp.drift

# GPS NMEA 时间源
server 127.127.20.0 mode 16 minpoll 3 maxpoll 3 prefer
fudge 127.127.20.0 time2 0.103 refid GPS

# PPS 数据源
server 127.127.22.1 minpoll 3 maxpoll 3
fudge 127.127.22.1 time2 0.0 flag3 1 refid PPS

# 网络时间源（用于冗余）
server time.cloudflare.com iburst minpoll 6 maxpoll 10
server 0.pool.ntp.org iburst
server 1.pool.ntp.org iburst
server 2.pool.ntp.org iburst

# 防止恶意访问的限制规则
restrict default kod limited nomodify notrap nopeer noquery
restrict source limited kod
restrict 127.0.0.1
restrict ::1

# 容错设置，允许时间大偏移时仍能同步
tinker panic 0

# 启用日志记录
logfile /var/log/ntp.log

1. 检查服务的实际加载配置文件
查看 ntpd 的启动参数：
bash
ps -aux | grep ntpd
输出可能类似：
/usr/sbin/ntpd -p /var/run/ntpd.pid -g -c /run/ntp.conf.dhcp
如果显示 -c /run/ntp.conf.dhcp，说明服务当前使用的是 DHCP 动态生成的配置。
2. 禁用 DHCP 动态 NTP 配置
如果你希望 NTP 服务只使用 /etc/ntp.conf 配置，需要禁用 DHCP 对 NTP 配置的干预：
编辑 /etc/dhcp/dhclient.conf 文件：
bash
复制代码
sudo nano /etc/dhcp/dhclient.conf
添加或修改以下内容：
text
复制代码
supersede ntp-servers 127.0.0.1;
说明：
这会强制 DHCP 不覆盖本地 NTP 配置。
保存后重新启动网络服务或重新获取 DHCP 配置：
bash
复制代码
sudo systemctl restart networking
sudo dhclient -r && sudo dhclient
1. 强制使用 /etc/ntp.conf
编辑 NTP 服务配置文件，确保服务加载 /etc/ntp.conf：
打开 NTP 服务配置文件：
bash
复制代码
sudo nano /lib/systemd/system/ntp.service
找到包含 ExecStart 的行，修改为：
text
复制代码
ExecStart=/usr/sbin/ntpd -p /var/run/ntpd.pid -g -c /etc/ntp.conf
保存后重新加载系统服务配置：
bash
复制代码
sudo systemctl daemon-reload
重启 NTP 服务：
bash
复制代码
sudo systemctl restart ntp

NTP 默认尝试 /dev/gps0，您需要通过符号链接将 /dev/ttyUSB0 指向 /dev/gps0：
bash
复制代码
sudo ln -s /dev/ttyUSB0 /dev/gps0
确认符号链接创建成功：
bash
复制代码
ls -l /dev/gps0



